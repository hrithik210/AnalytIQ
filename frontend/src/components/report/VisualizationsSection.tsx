import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { AlertTriangle, BarChart3 } from "lucide-react";
import Plot from 'react-plotly.js';

interface ChartData {
  data?: any[];
  layout?: any;
  config?: any;
  error?: string;
  title?: string;
  chart_type?: string;
}

interface VisualizationsSectionProps {
  chartData: ChartData[];
}

// Real Plotly chart component
const PlotlyChartWrapper: React.FC<{ chartData: ChartData; index: number }> = ({ 
  chartData, 
  index 
}) => {
  // Default layout for better styling
  const defaultLayout = {
    paper_bgcolor: 'rgba(0,0,0,0)',
    plot_bgcolor: 'rgba(0,0,0,0)',
    font: {
      color: 'hsl(var(--foreground))',
      family: 'Inter, sans-serif'
    },
    margin: { t: 40, r: 20, b: 40, l: 40 },
    ...chartData.layout
  };

  // Default config for responsiveness
  const defaultConfig = {
    responsive: true,
    displayModeBar: false,
    ...chartData.config
  };

  const chartTitle = chartData.title || chartData.layout?.title?.text || `Visualization ${index + 1}`;

  return (
    <Card className="border-0 bg-gradient-card shadow-card">
      <CardHeader className="pb-3">
        <CardTitle className="flex items-center gap-2">
          <BarChart3 className="h-5 w-5" />
          {chartTitle}
        </CardTitle>
      </CardHeader>
      <CardContent>
        {chartData.data && chartData.data.length > 0 ? (
          <div className="w-full">
            <Plot
              data={chartData.data}
              layout={defaultLayout}
              config={defaultConfig}
              style={{ width: '100%', height: '400px' }}
              useResizeHandler={true}
            />
          </div>
        ) : (
          <div className="h-96 bg-muted/30 rounded-lg flex items-center justify-center">
            <div className="text-center space-y-2">
              <BarChart3 className="h-12 w-12 mx-auto text-muted-foreground" />
              <p className="text-muted-foreground">No chart data available</p>
              <p className="text-xs text-muted-foreground">
                Chart data is empty or invalid
              </p>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  );
};

const ChartErrorPlaceholder: React.FC<{ index: number; errorMessage: string }> = ({ 
  index, 
  errorMessage 
}) => {
  return (
    <Card className="border-0 bg-gradient-card shadow-card">
      <CardHeader className="pb-3">
        <CardTitle className="flex items-center gap-2">
          <BarChart3 className="h-5 w-5" />
          Visualization {index + 1}
        </CardTitle>
      </CardHeader>
      <CardContent>
        <Alert>
          <AlertTriangle className="h-4 w-4" />
          <AlertDescription>
            <strong>Chart Generation Failed:</strong> {errorMessage}
          </AlertDescription>
        </Alert>
      </CardContent>
    </Card>
  );
};

const VisualizationsSection: React.FC<VisualizationsSectionProps> = ({ chartData }) => {
  return (
    <div className="space-y-6">
      <div className="text-center space-y-2">
        <h2 className="text-2xl font-bold flex items-center justify-center gap-2">
          <BarChart3 className="h-6 w-6" />
          Data Visualizations
        </h2>
        <p className="text-muted-foreground">
          Charts and graphs generated by our AI visualization agent
        </p>
      </div>
      
      <div className="grid gap-6">
        {chartData.map((chart, index) => (
          <div key={index}>
            {chart.error ? (
              <ChartErrorPlaceholder 
                index={index} 
                errorMessage={chart.error} 
              />
            ) : (
              <PlotlyChartWrapper 
                chartData={chart} 
                index={index} 
              />
            )}
          </div>
        ))}
        
        {chartData.length === 0 && (
          <Card className="border-0 bg-gradient-card shadow-card">
            <CardContent className="py-12 text-center">
              <BarChart3 className="h-12 w-12 mx-auto text-muted-foreground mb-4" />
              <p className="text-muted-foreground">No visualizations available</p>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
};

export default VisualizationsSection;